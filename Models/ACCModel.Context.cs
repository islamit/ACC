//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class ACCEntities : DbContext
{
    public ACCEntities()
        : base("name=ACCEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Account_Types> Account_Types { get; set; }
    public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
    public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
    public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
    public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
    public virtual DbSet<Customer> Customers { get; set; }
    public virtual DbSet<Customers_Type> Customers_Type { get; set; }
    public virtual DbSet<Item> Items { get; set; }
    public virtual DbSet<OrderItem> OrderItems { get; set; }
    public virtual DbSet<Sales_Man> Sales_Man { get; set; }
    public virtual DbSet<Transaction_Types> Transaction_Types { get; set; }
    public virtual DbSet<Transaction> Transactions { get; set; }
    public virtual DbSet<Voucher_Types> Voucher_Types { get; set; }
    public virtual DbSet<Voucher> Vouchers { get; set; }
    public virtual DbSet<Order> Orders { get; set; }
    public virtual DbSet<Account> Accounts { get; set; }
    public virtual DbSet<Account_Categories> Account_Categories { get; set; }

    public virtual ObjectResult<Accounts_AddEdit_Result> Accounts_AddEdit(ObjectParameter pK_Account, string account_Name, Nullable<byte> fK_Account_Type, Nullable<byte> fK_Account_Category, string userID, ObjectParameter return_Message)
    {
        var account_NameParameter = account_Name != null ?
            new ObjectParameter("Account_Name", account_Name) :
            new ObjectParameter("Account_Name", typeof(string));

        var fK_Account_TypeParameter = fK_Account_Type.HasValue ?
            new ObjectParameter("FK_Account_Type", fK_Account_Type) :
            new ObjectParameter("FK_Account_Type", typeof(byte));

        var fK_Account_CategoryParameter = fK_Account_Category.HasValue ?
            new ObjectParameter("FK_Account_Category", fK_Account_Category) :
            new ObjectParameter("FK_Account_Category", typeof(byte));

        var userIDParameter = userID != null ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Accounts_AddEdit_Result>("Accounts_AddEdit", pK_Account, account_NameParameter, fK_Account_TypeParameter, fK_Account_CategoryParameter, userIDParameter, return_Message);
    }

    public virtual ObjectResult<Accounts_Delete_Result> Accounts_Delete(string pK_Account, string userID)
    {
        var pK_AccountParameter = pK_Account != null ?
            new ObjectParameter("PK_Account", pK_Account) :
            new ObjectParameter("PK_Account", typeof(string));

        var userIDParameter = userID != null ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Accounts_Delete_Result>("Accounts_Delete", pK_AccountParameter, userIDParameter);
    }

    public virtual ObjectResult<Accounts_Insert_Result> Accounts_Insert(string account_Name, Nullable<byte> fK_Account_Type, Nullable<byte> fK_Account_Category, string userID)
    {
        var account_NameParameter = account_Name != null ?
            new ObjectParameter("Account_Name", account_Name) :
            new ObjectParameter("Account_Name", typeof(string));

        var fK_Account_TypeParameter = fK_Account_Type.HasValue ?
            new ObjectParameter("FK_Account_Type", fK_Account_Type) :
            new ObjectParameter("FK_Account_Type", typeof(byte));

        var fK_Account_CategoryParameter = fK_Account_Category.HasValue ?
            new ObjectParameter("FK_Account_Category", fK_Account_Category) :
            new ObjectParameter("FK_Account_Category", typeof(byte));

        var userIDParameter = userID != null ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Accounts_Insert_Result>("Accounts_Insert", account_NameParameter, fK_Account_TypeParameter, fK_Account_CategoryParameter, userIDParameter);
    }

    public virtual ObjectResult<Accounts_Update_Result> Accounts_Update(string pK_Account, string account_Name, Nullable<byte> fK_Account_Type, Nullable<byte> fK_Account_Category, string userID)
    {
        var pK_AccountParameter = pK_Account != null ?
            new ObjectParameter("PK_Account", pK_Account) :
            new ObjectParameter("PK_Account", typeof(string));

        var account_NameParameter = account_Name != null ?
            new ObjectParameter("Account_Name", account_Name) :
            new ObjectParameter("Account_Name", typeof(string));

        var fK_Account_TypeParameter = fK_Account_Type.HasValue ?
            new ObjectParameter("FK_Account_Type", fK_Account_Type) :
            new ObjectParameter("FK_Account_Type", typeof(byte));

        var fK_Account_CategoryParameter = fK_Account_Category.HasValue ?
            new ObjectParameter("FK_Account_Category", fK_Account_Category) :
            new ObjectParameter("FK_Account_Category", typeof(byte));

        var userIDParameter = userID != null ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Accounts_Update_Result>("Accounts_Update", pK_AccountParameter, account_NameParameter, fK_Account_TypeParameter, fK_Account_CategoryParameter, userIDParameter);
    }

    public virtual ObjectResult<Customer_AddEdit_Result> Customer_AddEdit(Nullable<long> pK_Customer, string customer_Name, Nullable<long> fileNum, Nullable<long> iDCard, string mobile1, string mobile2, string address, string notes, Nullable<byte> fK_Customer_Type, string fK_User)
    {
        var pK_CustomerParameter = pK_Customer.HasValue ?
            new ObjectParameter("PK_Customer", pK_Customer) :
            new ObjectParameter("PK_Customer", typeof(long));

        var customer_NameParameter = customer_Name != null ?
            new ObjectParameter("Customer_Name", customer_Name) :
            new ObjectParameter("Customer_Name", typeof(string));

        var fileNumParameter = fileNum.HasValue ?
            new ObjectParameter("FileNum", fileNum) :
            new ObjectParameter("FileNum", typeof(long));

        var iDCardParameter = iDCard.HasValue ?
            new ObjectParameter("IDCard", iDCard) :
            new ObjectParameter("IDCard", typeof(long));

        var mobile1Parameter = mobile1 != null ?
            new ObjectParameter("Mobile1", mobile1) :
            new ObjectParameter("Mobile1", typeof(string));

        var mobile2Parameter = mobile2 != null ?
            new ObjectParameter("Mobile2", mobile2) :
            new ObjectParameter("Mobile2", typeof(string));

        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));

        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));

        var fK_Customer_TypeParameter = fK_Customer_Type.HasValue ?
            new ObjectParameter("FK_Customer_Type", fK_Customer_Type) :
            new ObjectParameter("FK_Customer_Type", typeof(byte));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_AddEdit_Result>("Customer_AddEdit", pK_CustomerParameter, customer_NameParameter, fileNumParameter, iDCardParameter, mobile1Parameter, mobile2Parameter, addressParameter, notesParameter, fK_Customer_TypeParameter, fK_UserParameter);
    }

    public virtual ObjectResult<Customer_Delete_Result> Customer_Delete(Nullable<long> pK_Customer, string fK_User)
    {
        var pK_CustomerParameter = pK_Customer.HasValue ?
            new ObjectParameter("PK_Customer", pK_Customer) :
            new ObjectParameter("PK_Customer", typeof(long));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_Delete_Result>("Customer_Delete", pK_CustomerParameter, fK_UserParameter);
    }

    public virtual int Customer_Insert(string customer_Name, Nullable<long> fileNum, Nullable<long> iDCard, string mobile1, string mobile2, string address, string notes, string fK_Account, Nullable<byte> fK_Customer_Type, string fK_User)
    {
        var customer_NameParameter = customer_Name != null ?
            new ObjectParameter("Customer_Name", customer_Name) :
            new ObjectParameter("Customer_Name", typeof(string));

        var fileNumParameter = fileNum.HasValue ?
            new ObjectParameter("FileNum", fileNum) :
            new ObjectParameter("FileNum", typeof(long));

        var iDCardParameter = iDCard.HasValue ?
            new ObjectParameter("IDCard", iDCard) :
            new ObjectParameter("IDCard", typeof(long));

        var mobile1Parameter = mobile1 != null ?
            new ObjectParameter("Mobile1", mobile1) :
            new ObjectParameter("Mobile1", typeof(string));

        var mobile2Parameter = mobile2 != null ?
            new ObjectParameter("Mobile2", mobile2) :
            new ObjectParameter("Mobile2", typeof(string));

        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));

        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var fK_Customer_TypeParameter = fK_Customer_Type.HasValue ?
            new ObjectParameter("FK_Customer_Type", fK_Customer_Type) :
            new ObjectParameter("FK_Customer_Type", typeof(byte));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Customer_Insert", customer_NameParameter, fileNumParameter, iDCardParameter, mobile1Parameter, mobile2Parameter, addressParameter, notesParameter, fK_AccountParameter, fK_Customer_TypeParameter, fK_UserParameter);
    }

    public virtual ObjectResult<Customer_Select_Result> Customer_Select()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_Select_Result>("Customer_Select");
    }

    public virtual ObjectResult<Customer_Update_Result> Customer_Update(string customer_Name, Nullable<long> fileNum, Nullable<long> iDCard, string mobile1, string mobile2, string address, string notes, Nullable<byte> fK_Customer_Type, string fK_User, Nullable<long> pK_Customer)
    {
        var customer_NameParameter = customer_Name != null ?
            new ObjectParameter("Customer_Name", customer_Name) :
            new ObjectParameter("Customer_Name", typeof(string));

        var fileNumParameter = fileNum.HasValue ?
            new ObjectParameter("FileNum", fileNum) :
            new ObjectParameter("FileNum", typeof(long));

        var iDCardParameter = iDCard.HasValue ?
            new ObjectParameter("IDCard", iDCard) :
            new ObjectParameter("IDCard", typeof(long));

        var mobile1Parameter = mobile1 != null ?
            new ObjectParameter("Mobile1", mobile1) :
            new ObjectParameter("Mobile1", typeof(string));

        var mobile2Parameter = mobile2 != null ?
            new ObjectParameter("Mobile2", mobile2) :
            new ObjectParameter("Mobile2", typeof(string));

        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));

        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));

        var fK_Customer_TypeParameter = fK_Customer_Type.HasValue ?
            new ObjectParameter("FK_Customer_Type", fK_Customer_Type) :
            new ObjectParameter("FK_Customer_Type", typeof(byte));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        var pK_CustomerParameter = pK_Customer.HasValue ?
            new ObjectParameter("PK_Customer", pK_Customer) :
            new ObjectParameter("PK_Customer", typeof(long));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_Update_Result>("Customer_Update", customer_NameParameter, fileNumParameter, iDCardParameter, mobile1Parameter, mobile2Parameter, addressParameter, notesParameter, fK_Customer_TypeParameter, fK_UserParameter, pK_CustomerParameter);
    }

    public virtual int Data_Delete()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Data_Delete");
    }

    public virtual ObjectResult<Order_AddEdit_Result> Order_AddEdit(Nullable<byte> fK_Sales_Man, string orderNo, string fK_Account, Nullable<System.DateTime> order_Date, string sponsor, string sponsor_Info, string fK_User, Nullable<long> pK_Order)
    {
        var fK_Sales_ManParameter = fK_Sales_Man.HasValue ?
            new ObjectParameter("FK_Sales_Man", fK_Sales_Man) :
            new ObjectParameter("FK_Sales_Man", typeof(byte));

        var orderNoParameter = orderNo != null ?
            new ObjectParameter("OrderNo", orderNo) :
            new ObjectParameter("OrderNo", typeof(string));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var order_DateParameter = order_Date.HasValue ?
            new ObjectParameter("Order_Date", order_Date) :
            new ObjectParameter("Order_Date", typeof(System.DateTime));

        var sponsorParameter = sponsor != null ?
            new ObjectParameter("Sponsor", sponsor) :
            new ObjectParameter("Sponsor", typeof(string));

        var sponsor_InfoParameter = sponsor_Info != null ?
            new ObjectParameter("Sponsor_Info", sponsor_Info) :
            new ObjectParameter("Sponsor_Info", typeof(string));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        var pK_OrderParameter = pK_Order.HasValue ?
            new ObjectParameter("PK_Order", pK_Order) :
            new ObjectParameter("PK_Order", typeof(long));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Order_AddEdit_Result>("Order_AddEdit", fK_Sales_ManParameter, orderNoParameter, fK_AccountParameter, order_DateParameter, sponsorParameter, sponsor_InfoParameter, fK_UserParameter, pK_OrderParameter);
    }

    public virtual ObjectResult<Order_Delete_Result> Order_Delete(Nullable<long> pK_Order, string fK_User)
    {
        var pK_OrderParameter = pK_Order.HasValue ?
            new ObjectParameter("PK_Order", pK_Order) :
            new ObjectParameter("PK_Order", typeof(long));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Order_Delete_Result>("Order_Delete", pK_OrderParameter, fK_UserParameter);
    }

    public virtual int Order_GTotal_Update(Nullable<long> pK_Order, ObjectParameter gTotal)
    {
        var pK_OrderParameter = pK_Order.HasValue ?
            new ObjectParameter("PK_Order", pK_Order) :
            new ObjectParameter("PK_Order", typeof(long));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Order_GTotal_Update", pK_OrderParameter, gTotal);
    }

    public virtual ObjectResult<Order_Insert_Result> Order_Insert(Nullable<byte> fK_Sales_Man, string orderNo, string fK_Account, Nullable<System.DateTime> order_Date, string sponsor, string sponsor_Info, string fK_User)
    {
        var fK_Sales_ManParameter = fK_Sales_Man.HasValue ?
            new ObjectParameter("FK_Sales_Man", fK_Sales_Man) :
            new ObjectParameter("FK_Sales_Man", typeof(byte));

        var orderNoParameter = orderNo != null ?
            new ObjectParameter("OrderNo", orderNo) :
            new ObjectParameter("OrderNo", typeof(string));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var order_DateParameter = order_Date.HasValue ?
            new ObjectParameter("Order_Date", order_Date) :
            new ObjectParameter("Order_Date", typeof(System.DateTime));

        var sponsorParameter = sponsor != null ?
            new ObjectParameter("Sponsor", sponsor) :
            new ObjectParameter("Sponsor", typeof(string));

        var sponsor_InfoParameter = sponsor_Info != null ?
            new ObjectParameter("Sponsor_Info", sponsor_Info) :
            new ObjectParameter("Sponsor_Info", typeof(string));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Order_Insert_Result>("Order_Insert", fK_Sales_ManParameter, orderNoParameter, fK_AccountParameter, order_DateParameter, sponsorParameter, sponsor_InfoParameter, fK_UserParameter);
    }

    public virtual ObjectResult<Order_Select_Result> Order_Select()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Order_Select_Result>("Order_Select");
    }

    public virtual ObjectResult<Order_Update_Result> Order_Update(Nullable<byte> fK_Sales_Man, string orderNo, string fK_Account, Nullable<System.DateTime> order_Date, string sponsor, string sponsor_Info, string fK_User, Nullable<long> pK_Order)
    {
        var fK_Sales_ManParameter = fK_Sales_Man.HasValue ?
            new ObjectParameter("FK_Sales_Man", fK_Sales_Man) :
            new ObjectParameter("FK_Sales_Man", typeof(byte));

        var orderNoParameter = orderNo != null ?
            new ObjectParameter("OrderNo", orderNo) :
            new ObjectParameter("OrderNo", typeof(string));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var order_DateParameter = order_Date.HasValue ?
            new ObjectParameter("Order_Date", order_Date) :
            new ObjectParameter("Order_Date", typeof(System.DateTime));

        var sponsorParameter = sponsor != null ?
            new ObjectParameter("Sponsor", sponsor) :
            new ObjectParameter("Sponsor", typeof(string));

        var sponsor_InfoParameter = sponsor_Info != null ?
            new ObjectParameter("Sponsor_Info", sponsor_Info) :
            new ObjectParameter("Sponsor_Info", typeof(string));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        var pK_OrderParameter = pK_Order.HasValue ?
            new ObjectParameter("PK_Order", pK_Order) :
            new ObjectParameter("PK_Order", typeof(long));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Order_Update_Result>("Order_Update", fK_Sales_ManParameter, orderNoParameter, fK_AccountParameter, order_DateParameter, sponsorParameter, sponsor_InfoParameter, fK_UserParameter, pK_OrderParameter);
    }

    public virtual ObjectResult<OrderItems_AddEdit_Result> OrderItems_AddEdit(Nullable<long> fK_Order, Nullable<long> pK_OrderItem, Nullable<int> fK_Item, Nullable<int> quantity, Nullable<decimal> price)
    {
        var fK_OrderParameter = fK_Order.HasValue ?
            new ObjectParameter("FK_Order", fK_Order) :
            new ObjectParameter("FK_Order", typeof(long));

        var pK_OrderItemParameter = pK_OrderItem.HasValue ?
            new ObjectParameter("PK_OrderItem", pK_OrderItem) :
            new ObjectParameter("PK_OrderItem", typeof(long));

        var fK_ItemParameter = fK_Item.HasValue ?
            new ObjectParameter("FK_Item", fK_Item) :
            new ObjectParameter("FK_Item", typeof(int));

        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(int));

        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderItems_AddEdit_Result>("OrderItems_AddEdit", fK_OrderParameter, pK_OrderItemParameter, fK_ItemParameter, quantityParameter, priceParameter);
    }

    public virtual ObjectResult<Nullable<long>> OrderItems_Delete(Nullable<long> pK_OrderItem)
    {
        var pK_OrderItemParameter = pK_OrderItem.HasValue ?
            new ObjectParameter("PK_OrderItem", pK_OrderItem) :
            new ObjectParameter("PK_OrderItem", typeof(long));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("OrderItems_Delete", pK_OrderItemParameter);
    }

    public virtual ObjectResult<OrderItems_Insert_Result> OrderItems_Insert(Nullable<long> fK_Order, Nullable<int> fK_Item, Nullable<int> quantity, Nullable<decimal> price)
    {
        var fK_OrderParameter = fK_Order.HasValue ?
            new ObjectParameter("FK_Order", fK_Order) :
            new ObjectParameter("FK_Order", typeof(long));

        var fK_ItemParameter = fK_Item.HasValue ?
            new ObjectParameter("FK_Item", fK_Item) :
            new ObjectParameter("FK_Item", typeof(int));

        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(int));

        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderItems_Insert_Result>("OrderItems_Insert", fK_OrderParameter, fK_ItemParameter, quantityParameter, priceParameter);
    }

    public virtual ObjectResult<OrderItems_Select_Result> OrderItems_Select()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderItems_Select_Result>("OrderItems_Select");
    }

    public virtual ObjectResult<OrderItems_Update_Result> OrderItems_Update(Nullable<int> fK_Item, Nullable<int> quantity, Nullable<decimal> price, Nullable<long> pK_OrderItem)
    {
        var fK_ItemParameter = fK_Item.HasValue ?
            new ObjectParameter("FK_Item", fK_Item) :
            new ObjectParameter("FK_Item", typeof(int));

        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(int));

        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(decimal));

        var pK_OrderItemParameter = pK_OrderItem.HasValue ?
            new ObjectParameter("PK_OrderItem", pK_OrderItem) :
            new ObjectParameter("PK_OrderItem", typeof(long));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderItems_Update_Result>("OrderItems_Update", fK_ItemParameter, quantityParameter, priceParameter, pK_OrderItemParameter);
    }

    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));

        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }

    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));

        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }

    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }

    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }

    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }

    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {
        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));

        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));

        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }

    public virtual int sp_upgraddiagrams()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }

    public virtual ObjectResult<Transactions_AddEdit_Result> Transactions_AddEdit(ObjectParameter pK_Transaction, Nullable<byte> fK_Transaction_Type, Nullable<System.DateTime> transaction_Date, string fK_Account, string transaction_Name, Nullable<decimal> amount, string fK_User)
    {
        var fK_Transaction_TypeParameter = fK_Transaction_Type.HasValue ?
            new ObjectParameter("FK_Transaction_Type", fK_Transaction_Type) :
            new ObjectParameter("FK_Transaction_Type", typeof(byte));

        var transaction_DateParameter = transaction_Date.HasValue ?
            new ObjectParameter("Transaction_Date", transaction_Date) :
            new ObjectParameter("Transaction_Date", typeof(System.DateTime));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var transaction_NameParameter = transaction_Name != null ?
            new ObjectParameter("Transaction_Name", transaction_Name) :
            new ObjectParameter("Transaction_Name", typeof(string));

        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transactions_AddEdit_Result>("Transactions_AddEdit", pK_Transaction, fK_Transaction_TypeParameter, transaction_DateParameter, fK_AccountParameter, transaction_NameParameter, amountParameter, fK_UserParameter);
    }

    public virtual int Transactions_Amount_Update(Nullable<long> fK_Transaction, Nullable<decimal> amount)
    {
        var fK_TransactionParameter = fK_Transaction.HasValue ?
            new ObjectParameter("FK_Transaction", fK_Transaction) :
            new ObjectParameter("FK_Transaction", typeof(long));

        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transactions_Amount_Update", fK_TransactionParameter, amountParameter);
    }

    public virtual int Transactions_Delete(Nullable<int> pK_Transaction, string fK_User)
    {
        var pK_TransactionParameter = pK_Transaction.HasValue ?
            new ObjectParameter("PK_Transaction", pK_Transaction) :
            new ObjectParameter("PK_Transaction", typeof(int));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transactions_Delete", pK_TransactionParameter, fK_UserParameter);
    }

    public virtual ObjectResult<Transactions_Insert_Result> Transactions_Insert(ObjectParameter pK_Transaction, Nullable<byte> fK_Transaction_Type, Nullable<System.DateTime> transaction_Date, string fK_Account, string transaction_Name, Nullable<decimal> amount, string fK_User)
    {
        var fK_Transaction_TypeParameter = fK_Transaction_Type.HasValue ?
            new ObjectParameter("FK_Transaction_Type", fK_Transaction_Type) :
            new ObjectParameter("FK_Transaction_Type", typeof(byte));

        var transaction_DateParameter = transaction_Date.HasValue ?
            new ObjectParameter("Transaction_Date", transaction_Date) :
            new ObjectParameter("Transaction_Date", typeof(System.DateTime));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var transaction_NameParameter = transaction_Name != null ?
            new ObjectParameter("Transaction_Name", transaction_Name) :
            new ObjectParameter("Transaction_Name", typeof(string));

        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transactions_Insert_Result>("Transactions_Insert", pK_Transaction, fK_Transaction_TypeParameter, transaction_DateParameter, fK_AccountParameter, transaction_NameParameter, amountParameter, fK_UserParameter);
    }

    public virtual ObjectResult<Transactions_Select_Result> Transactions_Select()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transactions_Select_Result>("Transactions_Select");
    }

    public virtual int Transactions_Update(Nullable<int> pK_Transaction, Nullable<System.DateTime> transaction_Date, string transaction_Name, Nullable<decimal> amount, string fK_User)
    {
        var pK_TransactionParameter = pK_Transaction.HasValue ?
            new ObjectParameter("PK_Transaction", pK_Transaction) :
            new ObjectParameter("PK_Transaction", typeof(int));

        var transaction_DateParameter = transaction_Date.HasValue ?
            new ObjectParameter("Transaction_Date", transaction_Date) :
            new ObjectParameter("Transaction_Date", typeof(System.DateTime));

        var transaction_NameParameter = transaction_Name != null ?
            new ObjectParameter("Transaction_Name", transaction_Name) :
            new ObjectParameter("Transaction_Name", typeof(string));

        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transactions_Update", pK_TransactionParameter, transaction_DateParameter, transaction_NameParameter, amountParameter, fK_UserParameter);
    }

    public virtual int Usp_Login(string userName, string password)
    {
        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Login", userNameParameter, passwordParameter);
    }

    public virtual ObjectResult<Vouchers_AddEdit_Result> Vouchers_AddEdit(Nullable<long> pK_Voucher, Nullable<byte> fK_Voucher_Type, Nullable<int> voucher_Num, Nullable<System.DateTime> voucher_Date, string fK_Account, string voucher_Name, Nullable<decimal> amount, string fK_User)
    {
        var pK_VoucherParameter = pK_Voucher.HasValue ?
            new ObjectParameter("PK_Voucher", pK_Voucher) :
            new ObjectParameter("PK_Voucher", typeof(long));

        var fK_Voucher_TypeParameter = fK_Voucher_Type.HasValue ?
            new ObjectParameter("FK_Voucher_Type", fK_Voucher_Type) :
            new ObjectParameter("FK_Voucher_Type", typeof(byte));

        var voucher_NumParameter = voucher_Num.HasValue ?
            new ObjectParameter("Voucher_Num", voucher_Num) :
            new ObjectParameter("Voucher_Num", typeof(int));

        var voucher_DateParameter = voucher_Date.HasValue ?
            new ObjectParameter("Voucher_Date", voucher_Date) :
            new ObjectParameter("Voucher_Date", typeof(System.DateTime));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var voucher_NameParameter = voucher_Name != null ?
            new ObjectParameter("Voucher_Name", voucher_Name) :
            new ObjectParameter("Voucher_Name", typeof(string));

        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vouchers_AddEdit_Result>("Vouchers_AddEdit", pK_VoucherParameter, fK_Voucher_TypeParameter, voucher_NumParameter, voucher_DateParameter, fK_AccountParameter, voucher_NameParameter, amountParameter, fK_UserParameter);
    }

    public virtual ObjectResult<string> Vouchers_Delete(Nullable<long> pK_Voucher, string fK_User)
    {
        var pK_VoucherParameter = pK_Voucher.HasValue ?
            new ObjectParameter("PK_Voucher", pK_Voucher) :
            new ObjectParameter("PK_Voucher", typeof(long));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Vouchers_Delete", pK_VoucherParameter, fK_UserParameter);
    }

    public virtual ObjectResult<Vouchers_Insert_Result> Vouchers_Insert(Nullable<byte> fK_Voucher_Type, Nullable<int> voucher_Num, Nullable<System.DateTime> voucher_Date, string fK_Account, string voucher_Name, Nullable<decimal> amount, string fK_User)
    {
        var fK_Voucher_TypeParameter = fK_Voucher_Type.HasValue ?
            new ObjectParameter("FK_Voucher_Type", fK_Voucher_Type) :
            new ObjectParameter("FK_Voucher_Type", typeof(byte));

        var voucher_NumParameter = voucher_Num.HasValue ?
            new ObjectParameter("Voucher_Num", voucher_Num) :
            new ObjectParameter("Voucher_Num", typeof(int));

        var voucher_DateParameter = voucher_Date.HasValue ?
            new ObjectParameter("Voucher_Date", voucher_Date) :
            new ObjectParameter("Voucher_Date", typeof(System.DateTime));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var voucher_NameParameter = voucher_Name != null ?
            new ObjectParameter("Voucher_Name", voucher_Name) :
            new ObjectParameter("Voucher_Name", typeof(string));

        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vouchers_Insert_Result>("Vouchers_Insert", fK_Voucher_TypeParameter, voucher_NumParameter, voucher_DateParameter, fK_AccountParameter, voucher_NameParameter, amountParameter, fK_UserParameter);
    }

    public virtual ObjectResult<Vouchers_Select_Result> Vouchers_Select()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vouchers_Select_Result>("Vouchers_Select");
    }

    public virtual ObjectResult<string> Vouchers_Update(Nullable<byte> fK_Voucher_Type, Nullable<int> voucher_Num, Nullable<System.DateTime> voucher_Date, string fK_Account, string voucher_Name, Nullable<decimal> amount, string fK_User, Nullable<long> pK_Voucher)
    {
        var fK_Voucher_TypeParameter = fK_Voucher_Type.HasValue ?
            new ObjectParameter("FK_Voucher_Type", fK_Voucher_Type) :
            new ObjectParameter("FK_Voucher_Type", typeof(byte));

        var voucher_NumParameter = voucher_Num.HasValue ?
            new ObjectParameter("Voucher_Num", voucher_Num) :
            new ObjectParameter("Voucher_Num", typeof(int));

        var voucher_DateParameter = voucher_Date.HasValue ?
            new ObjectParameter("Voucher_Date", voucher_Date) :
            new ObjectParameter("Voucher_Date", typeof(System.DateTime));

        var fK_AccountParameter = fK_Account != null ?
            new ObjectParameter("FK_Account", fK_Account) :
            new ObjectParameter("FK_Account", typeof(string));

        var voucher_NameParameter = voucher_Name != null ?
            new ObjectParameter("Voucher_Name", voucher_Name) :
            new ObjectParameter("Voucher_Name", typeof(string));

        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));

        var fK_UserParameter = fK_User != null ?
            new ObjectParameter("FK_User", fK_User) :
            new ObjectParameter("FK_User", typeof(string));

        var pK_VoucherParameter = pK_Voucher.HasValue ?
            new ObjectParameter("PK_Voucher", pK_Voucher) :
            new ObjectParameter("PK_Voucher", typeof(long));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Vouchers_Update", fK_Voucher_TypeParameter, voucher_NumParameter, voucher_DateParameter, fK_AccountParameter, voucher_NameParameter, amountParameter, fK_UserParameter, pK_VoucherParameter);
    }
}
